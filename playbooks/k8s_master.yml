---
### Common tasks
- name: install common packets on vms
  become: true
  hosts: all
  roles:
    - role: k8s_common
      vars:
        k8s_common_k8s_ver: "{{ _k8s_version }}"
        k8s_common_kubelet_listen_ip: "{{ ansible_enp0s8.ipv4.address }}"
      tags:
        - common
    - role: k8s_master
      vars:
        k8s_master_ver: "{{ _k8s_version }}"
        k8s_master_bootstrap_token: "{{ _k8s_bootstrap_token }}"
        k8s_master_master_ip_addr: "{{ _k8s_master_node_ip }}"
        k8s_master_master_int_fqdn: "master.{{ k8s_master_master_ip_addr }}.nip.io"
        k8s_master_cluster_name: test-cluster
        k8s_master_calico: true
      tags:
        - master
    - role: helm
      vars:
        helm_kubeapi_ip_addr: "{{ _k8s_master_node_ip }}"
        helm_charts:
          # #Cilium
          # - name: cilium
          #   repo:
          #     name: cilium
          #     repo_url: "https://helm.cilium.io/"
          #   chart:
          #     chart_version: 1.10.3
          #     chart_ref: cilium/cilium
          #     release_namespace: kube-system
          #     chart_values:
          #       ipam:
          #         operator:
          #           clusterPoolIPv4PodCIDR: "10.99.0.0/16" # fix issue with vbox 10.0.2.X network
          #       debug:
          #         enabled: true
          #       hubble:
          #         relay:
          #           enabled: true
          #         ui:
          #           enabled: true
          # ArgoCD
          - name: argocd
            repo:
              name: argo
              repo_url: "https://argoproj.github.io/argo-helm"
            chart:
              chart_version: 3.10.0
              chart_ref: argo/argo-cd
              release_namespace: argocd
              chart_values:
                server:
                  extraArgs:
                    - --insecure # <-- this thing needs to be added
                  additionalApplications:
                    - name: cluster-bootstrap
                      namespace: argocd
                      additionalLabels:
                        argo-app: bootstrap
                      additionalAnnotations: {}
                      project: default
                      source:
                        repoURL: https://github.com/fl64/localk8s.git
                        targetRevision: dev3
                        path: argo/bootstrap
                        directory:
                          recurse: true
                      destination:
                        server: https://kubernetes.default.svc
                        namespace: default
                      syncPolicy:
                        automated:
                          selfHeal: true
                          allowEmpty: true
                          prune: true
                  ingress:
                    hosts:
                      - argo.k8s.local
                    enabled: true
                    annotations:
                      kubernetes.io/ingress.class: nginx
                    paths:
                      - /
                  config:
                    repositories: |
                      - url: https://github.com/fl64/argocd-applicatioin-set
                configs:
                  secret:
                    argocdServerAdminPassword: $2y$12$PAlSlC1uHzwDUSoPZWN.9.sTi/zDWXf3XrigGWBhJl5PMHlNsy8i.
                    argocdServerAdminPasswordMtime: "2021-06-02T15:04:05Z"
          # ArgoCD application set
          - name: argocd-applicationset
            repo:
              name: argo
              repo_url: "https://argoproj.github.io/argo-helm"
            chart:
              chart_version: 1.0.0
              chart_ref: argo/argocd-applicationset
              release_namespace: argocd
              chart_values:
                installCRDs: false
        # # Metallb
        # - name: metallb
        #   repo:
        #     name: bitnami
        #     repo_url: "https://charts.bitnami.com/bitnami"
        #   chart:
        #     chart_version: 2.4.0
        #     chart_ref: bitnami/metallb
        #     release_namespace: metallb
        #     chart_values:
        #       configInline:
        #         address-pools:
        #         - name: generic-cluster-pool
        #           protocol: layer2
        #           addresses:
        #           - 192.168.111.200-192.168.111.220
        # # metrics-server
        # - name: metrics-server
        #   repo:
        #     name: bitnami
        #     repo_url: "https://charts.bitnami.com/bitnami"
        #   chart:
        #     chart_version: 5.8.9
        #     chart_ref: bitnami/metrics-server
        #     release_namespace: kube-system
        #     chart_values:
        #       rbac:
        #         create: true
        #       extraArgs:
        #         kubelet-insecure-tls:
        #         kubelet-preferred-address-types: InternalIP
        #         v: 4

      tags:
        - master
        - helm

# install NFS server on master node (don't do it in real env lol)
- name: install nfs
  become: true
  hosts: all
  tasks:
    - name: install NFS srv
      block:
        - name: common tasks
          apt:
            name:
              - nfs-kernel-server
              - nfs-common
              - portmap
            state: present
            update_cache: true
          notify: reload nfs

        - name: create nfsdir
          file:
            path: /var/nfs/share
            state: directory
            mode: 0777
          notify: reload nfs

        - name: configure nfs
          copy:
            content: |
              /var/nfs/share  *(rw,sync,no_subtree_check,no_root_squash,insecure)
            dest: /etc/exports
          notify: reload nfs

        - name: debug
          shell: exportfs -rv && showmount -e
      tags:
        - nfs
  handlers:
    - name: reload nfs
      systemd:
        name: nfs-server
        state: restarted
